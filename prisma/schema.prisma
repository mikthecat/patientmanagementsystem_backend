generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model doctors {
  iddoctors  Int        @id @default(autoincrement())
  name       String?    @db.VarChar(45)
  age        Int?
  sex        String?    @db.VarChar(45)
  specialist String?    @db.VarChar(45)
  date_hired String?    @db.VarChar(45)
  username   String?    @unique(map: "username_UNIQUE") @db.VarChar(45)
  password   String?    @db.VarChar(45)
  patients   patients[]
}

model patients {
  idpatients      Int      @id @default(autoincrement())
  name            String?  @db.VarChar(45)
  age             Int?
  sex             String?  @db.VarChar(45)
  appointment     String?  @db.VarChar(45)
  patient_number  Int?     @unique(map: "patient_number_UNIQUE")
  admission_date  String?  @db.VarChar(45)
  discharged_date String?  @db.VarChar(45)
  doctor          Int?
  doctors         doctors? @relation(fields: [doctor], references: [iddoctors], onDelete: NoAction, onUpdate: NoAction, map: "doctor_fk")

  @@index([doctor], map: "doctor_fk_idx")
}

model users {
  idusers  Int        @id @default(autoincrement())
  username String?    @db.VarChar(45)
  email    String?    @unique(map: "email_UNIQUE") @db.VarChar(45)
  password String?    @db.VarChar(45)
  bookings bookings[]
}

model admin {
  idadmin  Int     @id @default(autoincrement())
  username String? @unique(map: "username_UNIQUE") @db.VarChar(45)
  password String? @db.VarChar(45)
}

model bookings {
  idbookings   Int     @id @default(autoincrement())
  booker_id    Int?
  patient_name String? @db.VarChar(45)
  patient_age  Int?
  patient_sex  String? @db.VarChar(45)
  appointment  String? @db.VarChar(45)
  is_confirmed Int?    @db.TinyInt
  created_at   String? @db.VarChar(45)
  booking_date String? @db.VarChar(45)
  users        users?  @relation(fields: [booker_id], references: [idusers], onDelete: NoAction, onUpdate: NoAction, map: "user_fk")

  @@index([booker_id], map: "user_fk_idx")
}
